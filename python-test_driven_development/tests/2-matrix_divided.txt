Tests for "2-matrix_divided"
==============================

Using function: matrix_divided
------------------------------

Importing function:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Divide by 3:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Divide by 0:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Divide by string:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "10")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Divide by list:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], [10])
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Invalid matrix type:
    >>> matrix_divided([["beans"], ["rice"]], 10)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Invalid matrix size:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 10)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

All values 0.0:
    >>> matrix_divided([[0.0], [0.0]], 0.0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Divide by infinity:
    >>> matrix([[1, 2, 3], [4, 5, 6]], float(inf))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Missing one argument:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]],)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'